<?xml version="1.0" ?><OrchExportInfo><Time>Wed Feb 14 11:25:43 UTC 2018</Time><User></User><Comments></Comments><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"CSP2100_GET_Resources","taskLabel":"CSP2100 GET Resources","isActive":true,"taskSummary":"","taskDescription":"","taskDetails":"Configname: InputConfigCategory: SAE\r\n<------- Task Information ------->\r\nTask contains 7 inputs\r\n   cspServerName (Label: \'CSP Server IP or FQDN\', Type: text, MappableType: gen_text_input)\r\n   cspServerPort (Label: \'CSP Server Port\', Type: text, MappableType: gen_text_input)\r\n   cspUserName (Label: \'CSP Username\', Type: text, MappableType: gen_text_input)\r\n   cspPassword (Label: \'CSP Password\', Type: password, MappableType: password)\r\n   useProxy (Label: \'Use Proxy\', Type: embedded-lov, MappableType: gen_text_input)\r\n   proxyName (Label: \'Proxy Name (If Use Proxy set to true)\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'Proxy Port (If Use Proxy set to true)\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 0 outputs\r\nisRepoUsed: falseRepo file: Repo: script: importPackage(java.util);\nimportPackage(java.lang);\nimportPackage(java.io);\nimportPackage(com.cloupia.lib.util);\nimportPackage(org.apache.commons.httpclient);\nimportPackage(org.apache.commons.httpclient.cookie);\nimportPackage(org.apache.commons.httpclient.methods);\nimportPackage(org.apache.commons.httpclient.auth);\nimportPackage(org.apache.commons.httpclient.protocol);\nimportClass(org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory);\nimportPackage(com.cloupia.lib.cIaaS.vcd.api);\n\n/****************************************************************************************\n**                                                                                      **\n**    Author: Russ Whitear (rwhitear@cisco.com)                                         **\n**                                                                                      **\n**    IMPORTANT NOTE: THIS SCRIPT WILL NOT WORK WITH UCS DIRECTOR                       **\n**                    VERSIONS PRIOR TO 5.4                                             **\n**                                                                                      **\n**    Version: 1.0                                                                      **\n**                                                                                      **\n**                                                                                      **\n ****************************************************************************************/\n\n\n// main()\n\n// CSP Access Information.\nvar cspServerName = input.cspServerName+\"\";\nvar cspServerPort = input.cspServerPort+\"\";\nvar cspUserName = input.cspUserName+\"\";\nvar cspPassword = input.cspPassword+\"\";\n\n// URI for this GET request.\nvar uri = \"/api/running/resources/resource/csp-2100\";\n\n// Web proxy requirement to access CSP server.\nvar useProxy = input.useProxy+\"\";\nvar proxyName = input.proxyName+\"\";\nvar proxyPort = input.proxyPort+\"\";\n\n// Create new httpClient object.\nvar httpClient = new HttpClient();\n\n// Tolerate SSL self signed certs and no hostname verification.\nhttpClient = CustomEasySSLSocketFactory.getIgnoreSSLClient(cspServerName, cspServerPort);\n\nhttpClient.getParams().setCookiePolicy(\"default\");\n\n// Configure Basic Auth for accessing the CSP2100 REST API\nhttpClient.getParams().setAuthenticationPreemptive(true);\nvar defaultcreds = new UsernamePasswordCredentials(cspUserName, cspPassword);\nhttpClient.getState().setCredentials(new AuthScope(cspServerName, -1, null), defaultcreds);\n\n\nif( useProxy.match(\"true\") ) {\n  logger.addInfo(\"PROXY: Using \" +proxyName+ \":\" +proxyPort+ \".\");\n  var config = httpClient.getHostConfiguration();\n  config.setProxy(proxyName, proxyPort);\n} else {\n  logger.addInfo(\"PROXY: No proxy configured.\")\n}\n\n// GET Method.\nvar httpMethod = new GetMethod(uri);\n\n// Add the appropriate HTTP headers.\nhttpMethod.addRequestHeader(\"Accept\", \"*/*\");\nhttpMethod.addRequestHeader(\"Content-Type\", \"application/json\");\nhttpMethod.addRequestHeader(\"Connection\", \"close\");\n\n// Execute the GET request\nhttpClient.executeMethod(httpMethod);\n\n// Retrieve HTTP status code and response data.\nvar statusCode = httpMethod.getStatusCode();\nvar response = httpMethod.getResponseBodyAsString();\n\n// Release the connection.\nhttpMethod.releaseConnection();\n\nlogger.addInfo(\"statusCode: \" +statusCode);\nlogger.addInfo(\"response: \" +response);\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><version>3.0</version></OrchExportInfo>