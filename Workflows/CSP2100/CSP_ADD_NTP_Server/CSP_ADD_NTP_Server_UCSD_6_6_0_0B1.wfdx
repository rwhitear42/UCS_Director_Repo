<?xml version="1.0" ?><OrchExportInfo><Time>Wed Feb 14 16:36:13 UTC 2018</Time><User></User><Comments></Comments><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"CSP2100_ADD_NTP_Server","taskLabel":"CSP2100 Add NTP Server","isActive":true,"taskSummary":"","taskDescription":"","taskDetails":"Configname: InputConfigCategory: SAE\r\n<------- Task Information ------->\r\nTask contains 8 inputs\r\n   cspServerName (Label: \'CSP Server IP or FQDN\', Type: text, MappableType: gen_text_input)\r\n   cspServerPort (Label: \'CSP Server Port\', Type: text, MappableType: gen_text_input)\r\n   cspUserName (Label: \'CSP Username\', Type: text, MappableType: gen_text_input)\r\n   cspPassword (Label: \'CSP Password\', Type: password, MappableType: password)\r\n   useProxy (Label: \'Use Proxy\', Type: embedded-lov, MappableType: gen_text_input)\r\n   proxyName (Label: \'Proxy Name (If Use Proxy set to true)\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'Proxy Port (If Use Proxy set to true)\', Type: text, MappableType: gen_text_input)\r\n   ntpServerName (Label: \'NTP Server IP or FQDN\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 0 outputs\r\nisRepoUsed: falseRepo file: Repo: script: importClass(java.io.BufferedReader);\nimportClass(java.io.IOException);\nimportClass(java.io.InputStreamReader);\nimportClass(java.security.KeyManagementException);\nimportClass(java.security.KeyStoreException);\nimportClass(java.security.NoSuchAlgorithmException);\nimportClass(java.util.Base64);\nimportPackage(java.lang);\n\nimportClass(org.apache.commons.httpclient.HttpException);\nimportClass(org.apache.http.HttpHost);\nimportClass(org.apache.http.HttpResponse);\nimportClass(org.apache.http.auth.AuthScope);\nimportClass(org.apache.http.auth.UsernamePasswordCredentials);\nimportClass(org.apache.http.client.CredentialsProvider);\nimportClass(org.apache.http.client.methods.HttpPatch);\nimportClass(org.apache.http.conn.ssl.SSLConnectionSocketFactory);\nimportClass(org.apache.http.conn.ssl.SSLContextBuilder);\nimportClass(org.apache.http.conn.ssl.TrustSelfSignedStrategy);\nimportClass(org.apache.http.entity.StringEntity);\nimportClass(org.apache.http.impl.client.BasicCredentialsProvider);\nimportClass(org.apache.http.impl.client.CloseableHttpClient);\nimportClass(org.apache.http.impl.client.HttpClients);\nimportClass(org.apache.http.impl.conn.DefaultProxyRoutePlanner);\n\n/*******************************************************************************\n * Copyright (c) 2016 Cisco and/or its affiliates\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *******************************************************************************/\n\n/*******************************************************************************\n**\n**    Author: Russ Whitear (rwhitear@cisco.com)\n**\n**    IMPORTANT NOTE: THIS SCRIPT WILL NOT WORK WITH UCS DIRECTOR\n**                    VERSIONS PRIOR TO 5.4\n**\n**    Version: 1.0\n**\n**    Taskname: CSP_ADD_NTP_Server\n**\n**    Returns: Adds a new NTP server to the CSP configuration.\n**\n *******************************************************************************/\n\n\nvar cspServerName = input.cspServerName+\"\";\nvar cspServerPort = input.cspServerPort+\"\";\nvar cspUserName = input.cspUserName+\"\";\nvar cspPassword = input.cspPassword+\"\";\nvar ntpServerName = input.ntpServerName+\"\";\n\n// URI for this GET request.\nvar uri = \"/api/running/ntps/ntp\";\n\n// Web proxy requirement to access CSP server.\nvar useProxy = input.useProxy+\"\";\nvar proxyName = input.proxyName+\"\";\nvar proxyPort = input.proxyPort+\"\";\n\nvar bodyText = \"{\\\"ntp\\\": {\\\"ntp_server\\\":\\\"\"+ntpServerName+\"\\\"}}\";\n\n\nvar url = \"https://\" +cspServerName+ \":\" +cspServerPort+ uri;\n\nvar response = null;\nvar rd = null;\nvar result = new StringBuffer();\nvar line = \"\";\n\nvar token = cspUserName + \":\" + cspPassword;\n\n//logger.addInfo(\"token (cleartext): \" + token);\n\n// Encode the username:password to Base64.\nvar hash = Base64.getEncoder().encodeToString(token.getBytes(\"utf-8\"));\n\n// Configure proxy settings.\nif( useProxy.match(\"true\") ) {\n  var proxy = new HttpHost(proxyName, proxyPort);\n  var routePlanner = new DefaultProxyRoutePlanner(proxy);\n}\n\n// Configure SSL factory with self signed certs and no hostname verification.\nvar builder = new SSLContextBuilder();\nbuilder.loadTrustMaterial(null, new TrustSelfSignedStrategy());\nvar sslsf = new SSLConnectionSocketFactory( builder.build(),SSLConnectionSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);\n\n// Create HTTPS connection with proxy.\nif( useProxy.match(\"true\") ) {\n  var httpclient = HttpClients.custom().setSSLSocketFactory(sslsf).setRoutePlanner(routePlanner).build();\n} else {\n  var httpclient = HttpClients.custom().setSSLSocketFactory(sslsf).build();\n}\n\nvar httpPatch = new HttpPatch(url);\n\nhttpPatch.setEntity(new StringEntity(bodyText));\n\nhttpPatch.addHeader(\"Content-Type\", \"application/vnd.yang.data+json\");\nhttpPatch.addHeader(\"Authorization\", \"Basic \" + hash);\nhttpPatch.addHeader(\"Accept\", \"*/*\");\n\nresponse = httpclient.execute(httpPatch);\n\nhttpPatch.releaseConnection();\n\nlogger.addInfo(\"Status Code: \" +  response.getStatusLine().getStatusCode());\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><version>3.0</version></OrchExportInfo>